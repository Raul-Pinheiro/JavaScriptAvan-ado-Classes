   /*this._listaNegociacoes = ProxyFactory.create(
            new ListaNegociacoes(),
            ['adiciona','esvazia'],
            model => this._negociacaoView.update(model)
            
        );*/



    
 /*this._mensagem=ProxyFactory.create(
            new Mensagem(),
            ['texto'],
            (model)=> this._mensagemView.update(model)
        );*/
        // this._mensagemView.update(this._mensagem);       
        // this._negociacaoView.update(this._listaNegociacoes);


//this._mensagemView.update(this._mensagem);   



//Callback Hell -------------------------------------------------------------

    importaNegociacoes() {

        let service = new NegociacaoService();
        service.obterNegociacoesDaSemana((err,negociacoes)=>{
            if(err){
                this._mensagem.texto=err;
                return;
            }
            negociacoes.forEach(negociacao=>this._listaNegociacoes.adiciona(negociacao));
            //this._mensagem.texto='Negociações importadas com sucesso!';

            service.obterNegociacoesDaSemanaAnterior((err,negociacoes)=>{
                if(err){
                    this._mensagem.texto=err;
                    return;
                }
                negociacoes.forEach(negociacao=>this._listaNegociacoes.adiciona(negociacao));
                //this._mensagem.texto='Negociações importadas com sucesso!';
                
                service.obterNegociacoesDaSemanaRetrasada((err,negociacoes)=>{
                    if(err){
                        this._mensagem.texto=err;
                        return;
                    }
                    negociacoes.forEach(negociacao=>this._listaNegociacoes.adiciona(negociacao));
                   
        
                });
            });
            this._mensagem.texto='Negociações importadas com sucesso!';
        });




Negociacao Service


  /*
    obterNegociacoesDaSemanaRetrasada(callback){
        let xhr = new XMLHttpRequest();

        xhr.open('GET', 'negociacoes/retrasada');
        //Configurações importantes
        xhr.onreadystatechange = () => {
            if (xhr.readyState == 4) {
                if (xhr.status == 200) {
                    console.log('Obtendo as negociações do servidor')
                    callback(null,JSON.parse(xhr.responseText)
                    .map(obj => new Negociacao(new Date(obj.data), obj.quantidade, obj.valor)));
                    //.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));
                } else {
                    
                    console.log(JSON.parse(xhr.responseText));
                    callback('Não foi possível processar as negociações',null);

                }
            }
        }

        xhr.send();
    }
    */


Resolvendo callback hell com Promise----------------------------------------------------

     /*
        promise
            .then(negociacoes =>{
                negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));
                this._mensagem.texto = 'Negociação da semana importada com sucesso';
            })
            
            .catch( error => this._mensagem.texto = error )    

        promise2
            .then(negociacoes =>{
                negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));
                this._mensagem.texto = 'Negociação da semana importada com sucesso';
            })
            
            .catch( error => this._mensagem.texto = error )    
        promise3
            .then(negociacoes =>{
                negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));
                this._mensagem.texto = 'Negociação da semana importada com sucesso';
            })
            
            .catch( error => this._mensagem.texto = error )    

        */

Melhorando primise--------------------------------------------------------


      let service = new NegociacaoService();

        let promise = service.obterNegociacoesDaSemana();
        let promise2 = service.obterNegociacoesDaSemanaAnterior();
        let promise3 = service.obterNegociacoesDaSemanaRetrasada();

        Promise.all([
            promise,
            promise2,
            promise3]
            )
            .then(negociacoes =>{
                negociacoes
                .reduce((arrayAchatado,array)  => arrayAchatado.concat(array),[])
                .forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));
                this._mensagem.texto = 'Negociação da semana importada com sucesso';
            })
            .catch( error => this._mensagem.texto = error ) 
//-------------------------------------------------------------------------------------

  obterNegociacoesDaSemanaAnterior(){

        return new Promise((resolve,reject) => {
            let xhr = new XMLHttpRequest();

            xhr.open('GET', 'negociacoes/anterior');
            //Configurações importantes
            xhr.onreadystatechange = () => {
                if (xhr.readyState == 4) {
                    if (xhr.status == 200) {
                        console.log('Obtendo as negociações do servidor')
                        resolve(JSON.parse(xhr.responseText)
                        .map(obj => new Negociacao(new Date(obj.data), obj.quantidade, obj.valor)));
                        //.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));
                    } else {
                        
                        console.log(JSON.parse(xhr.responseText));
                        reject('Não foi possível processar as negociações' );
    
                    }
                }
            }
    
            xhr.send();
        })
 
    }
 